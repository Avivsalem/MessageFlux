# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ dev, staging, main ]
  pull_request:
    branches: [ dev, staging, main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        platform: [ ubuntu-latest, windows-latest ]
        python-version: [3.7, 3.8, 3.9, 3.10]
    runs-on: ${{ matrix.platform }}

    steps:
        # Checkout the latest code from the repo
      - name: Checkout repo
        uses: actions/checkout@v2
        # Setup which version of Python to use
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
        # Display the Python version being used
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
        # Install any basic dependencies required to run the tests
      - name: Install dependencies
        run: |
          python -m pip install pip -U
          pip install tox tox-gh-actions
        # Run the tests using tox.
      - name: Test with tox
        run: tox
        env:
          PLATFORM: ${{ matrix.platform }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: ./reports/test-results.xml
          detailed_summary: true
          include_passed: true
          check_name: ${{ matrix.python-version }}-${{ matrix.platform }} JUnit Test Report

      - name: Publish Coverage Comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./reports/test-console-results.txt
          junitxml-path: ./reports/test-results.xml
          title: ${{ matrix.python-version }}-${{ matrix.platform }} Test Coverage

      # Upload mypy artifact
      - name: Upload mypy artifact
        uses: actions/upload-artifact@v3
        with:
          name: mypy-report
          path: reports/mypy.xml
