# this workflow is for deploy

name: deploy

concurrency: production

on:
  # run this only after the tests workflow completed
  workflow_run:
    workflows: [ "tests" ]
    branches: [ main ]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # run only if tests succeeded
    steps:
      # Checkout the latest code from the repo
      - name: Checkout repo
        uses: actions/checkout@v3

        # Setup Python
      - name: Set Up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Get Latest Tag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        id: get-latest-tag

      - name: Compute New Version
        id: compute-new-version
        run: |
          echo "Repo Version: ${{ steps.get-latest-tag.outputs.tag }}"
          echo "File Version: $(<VERSION)"
          python compute_new_version.py -r ${{ steps.get-latest-tag.outputs.tag }} -m "$(<VERSION)" > VERSION
          echo "New Version: $(<VERSION)"
          echo "new_version=$(<VERSION)" >> $GITHUB_OUTPUT

      - name: Push New Version Tag
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: 'v${{ steps.compute-new-version.outputs.new_version }}'
          message: 'New Version: ${{ steps.compute-new-version.outputs.new_version  }}'

      - name: Build Project
        run: |
          pip install build
          python -m build

      - name: Twine Install and Check
        run: |
          pip install twine
          twine check dist/*

      - name: Twine Upload TestPyPi
        run: |
          twine upload -r testpypi -u __token__ -p ${{ secrets.MESSAGEFLUX_TESTPYPI_TOKEN }} dist/*

      - name: Twine Upload PyPi
        run: |
          twine upload -u __token__ -p ${{ secrets.MESSAGEFLUX_PYPI_TOKEN }} dist/*

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{ steps.compute-new-version.outputs.new_version }}'
          release_name: 'v${{ steps.compute-new-version.outputs.new_version }}'